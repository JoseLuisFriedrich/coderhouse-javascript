Object.freeze(obj) // Object.seal(obj)
Object.keys(obj) // Object.values(obj) // Object.entries(obj)


jift("first element in array")
array.shift() removes the first element in array
deleteditems = array.splice(2,3) remove 3 elements starting at 2nd position
.slice() get but do nt remove
.includes() -> si existe en item
array.some((p) => {return p.color === 'color'}}) -> condicion
for(let p in obj) console.log(p   obj[p])-> iterar propiedades

document.querySelector('#id p')
document.querySelector('.id')
document.querySelectorAll('.id')
.parentElement
.childNodes -> trae espacios
.children

const node = document.createElement('p')
node.textContent = ''
divPadre.appendChild(node, parent)
.insertBefore














--------------------------------------------------------------------------------------------------------

    // case 'Header':
    //   if (component.hasChildren()) {
    //     component.setStartDate(component.firstChild().startDate, true, false)
    //     component.setEndDate(component.lastChild(false).endDate, true, false)
    //     component.setDuration(dateDiff(component.startDate, component.endDate), true, false)
    //   } else {
    //     const previous = getPrevious(index)
    //     if (previous !== null) {
    //       component.setStartDate(previous.endDate, true, false)
    //       component.setEndDate(previous.endDate, true, false)
    //     }
    //   }
    //   break


    // Validations
    // if (dateParse(0, date, true) >= dateParse(0, this.endDate, true)) {
    //   this.setStartDate(dateParse(-1, this.endDate), true)
    //   return
    // }

